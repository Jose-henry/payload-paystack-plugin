──────────────────────────
paystack-payload-cms Plugin
──────────────────────────

OVERVIEW
  • Syncs your Payload collections (customers, plans, products) to Paystack  
    – on create → POST  
    – on update → PUT  
    – on delete → DELETE (or blacklist for unsupported resources)

  • Auto‐scaffolds “read-only” collections for  
    – transactions  
    – refunds  
    – orders  
    – subscriptions  
    which fetch directly from Paystack via afterOperation hooks.

  • Exposes an optional REST proxy at /api/paystack/rest  
    and a webhook endpoint at /api/paystack/webhook  

  • Adds a “View in Paystack” link and “Skip Sync” flag to every synced doc  

FEATURES & CAPABILITIES
  1. **Customer sync**  
     – Create / update customer data  
     – “Blacklist” toggle in your Payload UI → calls Paystack’s 
       POST /customer/set_risk_action  
     – You cannot DELETE a Paystack customer; plugin swallows 404s

  2. **Plan sync**  
     – Create, update, delete real Paystack Plans  
     – Stores `plan_code` in `paystackID` field

  3. **Product sync**  
     – Create, update, delete Paystack Products (or map to Plans if you prefer)  
     – Stores `product_code` (or `plan_code`) as `paystackID`

  4. **Read-only collections**  
     – `transaction`, `refund`, `order`, `subscription`  
     – No create/update/delete in Payload—only read via Paystack API  
     – Maps fields like id, status, amount, currency, etc.

  5. **REST Proxy**  
     – Optional `/api/paystack/rest` to call *any* Paystack endpoint  
     – Freedom to build custom UIs or one-off calls

  6. **Webhooks**  
     – `/api/paystack/webhook` verifies signatures and dispatches built-in handlers  
     – Hook into events like payment.success, subscription.create, etc.

CONFIGURATION
  • In your `payload.config.ts` under `plugins: [ paystackPlugin({ … }) ]`:

    – **paystackSecretKey** (required): your SK  
    – **webhookSecret** (optional): to verify incoming webhooks  
    – **rest**: `true` to enable REST proxy  
    – **logs**: `true` for detailed console logs  
    – **sync**: array of `{ collection, paystackResourceType, paystackResourceTypeSingular, fields }`  
    – **resourceSlugs** (optional): override default slugs for read-only collections  

  • **Amount fields** in Payload should be stored in kobo (×100)  
    – e.g. Hook beforeValidate: `value => value * 100`  
    – Paystack always expects the smallest currency unit

  • **Skip Sync** flag is automatically added to avoid infinite loops  
    – Plugin sets `skipSync = true` while it’s performing its own write

DOS & DON’TS
  ✔️ **Do** map all your Payload fields to the correct Paystack properties  
  ✔️ **Do** use the “View in Paystack” sidebar link to verify records  
  ✔️ **Do** enable `logs: true` while debugging flows  
  ✔️ **Do** override `resourceSlugs` if you already have those collections  

  ❌ **Don’t** assume Paystack allows DELETE on everything  
     – Customer and transaction deletion is not supported → blacklist instead  
  ❌ **Don’t** hand-roll your own webhook endpoint—use `/api/paystack/webhook`  
  ❌ **Don’t** forget to guard your REST proxy if exposing to public  

LIMITATIONS & GOTCHAS
  – **Customer deletion**: Paystack returns 404; plugin logs & swallows  
  – **Rate limits**: Paystack API is rate-limited; plugin retries twice on network errors  
  – **Data loss**: Reject external write operations on read-only collections  
  – **Field name conflicts**: If you already have a `blacklisted` or `skipSync` field, plugin won’t double-inject  

TROUBLESHOOTING
  1. **Missing paystackID?**  
     – Check your `sync` config’s `fields` and ensure you map the correct property  
     – Inspect console logs for the raw Paystack response  

  2. **Update not reflecting on Paystack?**  
     – Ensure you changed a mapped field (plugin only sends changed props)  
     – Confirm `skipSync` is false before your edit  

  3. **Read-only collection empty?**  
     – Verify your `resourceSlugs` override matches the slug in your code  
     – Trigger a `GET /api/<slug>` and inspect the raw API proxy response  

  4. **Webhook not firing?**  
     – Confirm you configured your Paystack webhook URL + secret  
     – Look at `/api/paystack/webhook` logs for signature verification errors  

FURTHER READING
  – Paystack API docs: https://paystack.com/docs/api  
  – Payload Hooks guide: https://payloadcms.com/docs/hooks  
  – Example integration repo: (link to your project)

──────────────────────────
Happy coding! 🚀
