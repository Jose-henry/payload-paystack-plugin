# Paystack Integration Documentation
====================================

## Currency & Amount Handling
----------------------------

### Supported Currencies
- NGN (Nigerian Naira) - subunit: Kobo
- USD (US Dollar) - subunit: Cent
- GHS (Ghanaian Cedi) - subunit: Pesewa
- ZAR (South African Rand) - subunit: Cent
- KES (Kenyan Shilling) - subunit: Cent

### Amount Conversion
1. Create Operations:
   - Automatic conversion to subunits (Ã—100)
   - Example: 1000 NGN â†’ 100000 kobo
   - Handled by beforeValidate hook on create

2. Update Operations:
   - No conversion (sent as-is)
   - Example: 1000 NGN stays as 1000 NGN
   - Prevents double conversion

### Currency Configuration
1. Test Mode (sk_test_ keys):
   - Only NGN supported by default
   - Other currencies require live mode

2. Live Mode (sk_live_ keys):
   - NGN supported by default
   - Other currencies need dashboard activation
   - Enable in Paystack Dashboard > Settings > API Keys & Webhooks

## API Integration
----------------

### Endpoints & Methods
1. Products:
   - Create: POST /product
   - Update: PUT /product/:id (numeric ID)
   - Delete: DELETE /product/:id (numeric ID)

2. Plans:
   - Create: POST /plan
   - Update: PUT /plan/:code (plan code)
   - Delete: DELETE /plan/:code (plan code)

3. Customers:
   - Create: POST /customer
   - Update: PUT /customer/:code (customer code)
   - Delete: DELETE /customer/:code (customer code)

### ID Management
- Products: Numeric IDs (e.g., 12345)
- Plans: Plan codes (e.g., PLN_abc123)
- Customers: Customer codes (e.g., CUS_xyz789)

## Plugin Features
----------------

### Core Functionality
1. Collection Synchronization:
   - Automatic sync with Paystack resources
   - Create â†’ POST
   - Update â†’ PUT
   - Delete â†’ DELETE (or blacklist)

2. Read-only Collections:
   - Transactions
   - Refunds
   - Orders
   - Subscriptions
   - Direct Paystack API integration

3. API Endpoints:
   - REST Proxy: /api/paystack/rest
   - Webhook: /api/paystack/webhook

### Resource Management
1. Customer Sync:
   - Full CRUD operations
   - Blacklist toggle support
   - Risk action management

2. Plan Sync:
   - Complete plan lifecycle
   - Plan code storage
   - Amount handling

3. Product Sync:
   - Product management
   - Currency support
   - Price conversion

## Configuration
--------------

### Plugin Setup
```typescript
paystackPlugin({
  paystackSecretKey: 'sk_xxx',
  webhookSecret: 'whsec_xxx',
  rest: true,
  logs: true,
  defaultCurrency: 'NGN',
  updateExistingProductsOnCurrencyChange: false,
  sync: [
    // Collection sync configs
  ]
})
```

### Field Mapping
```typescript
{
  fieldPath: 'name',
  paystackProperty: 'name'
}
```

## Best Practices
---------------

### Do's
1. Map all Payload fields to correct Paystack properties
2. Use "View in Paystack" link for verification
3. Enable logs during debugging
4. Override resourceSlugs if needed
5. Guard REST proxy endpoints

### Don'ts
1. Assume DELETE works on all resources
2. Create custom webhook endpoints
3. Expose REST proxy publicly
4. Modify read-only collections

## Troubleshooting
----------------

### Common Issues
1. Missing paystackID:
   - Verify field mappings
   - Check Paystack response logs

2. Updates not reflecting:
   - Confirm field changes
   - Check skipSync flag

3. Empty read-only collections:
   - Verify resourceSlugs
   - Check API proxy response

4. Webhook issues:
   - Verify webhook URL and secret
   - Check signature verification logs

## Error Handling
---------------

### API Errors
1. Validation:
   - Invalid ID/code format
   - Currency not enabled
   - Resource not found

2. Sync Errors:
   - Failed updates
   - Failed deletes
   - Missing fields

### Debug Logging
Enable with:
```typescript
paystackPlugin({
  logs: true
})
```

Logs include:
- API requests/responses
- Sync operations
- Webhook events
- Error details

## Limitations
-------------

1. Customer Deletion:
   - Not supported by Paystack
   - Plugin handles 404s gracefully

2. Rate Limits:
   - API is rate-limited
   - Plugin includes retry logic

3. Data Protection:
   - Read-only collection restrictions
   - Field conflict prevention

## Resources
-----------

- Paystack API: https://paystack.com/docs/api
- Payload Hooks: https://payloadcms.com/docs/hooks
- Example Integration: (link to project)

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Happy coding! ðŸš€
